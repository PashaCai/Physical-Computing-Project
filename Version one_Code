<h1>Version one_Code</h1>

const int SW_PIN = 4;//定义旋转编码开关的引脚 Defining the pins of the rotary code switch
const int PIN_A =2;
const int PIN_B =3;

#include <Encoder.h> /*******************************/

Encoder myEnc(PIN_A, PIN_B);
//  

const int homePosition = 0; //初始位置 Initial position
const int stepValue = 3;//转动旋钮时舵机的旋转速度 Rotation speed of the servo when the knob is turned
const int servoPin = 9;//~必须是标有~的引脚舵机引脚
#include <Servo.h> /*******************************/

Servo myservo;  //创建伺服对象来控制伺服
int servoAngel =homePosition;


#include <Wire.h>/*******************************/
#include <LiquidCrystal_I2C.h>/*******************************/

// 将 LCD 地址设置为 0x27 或 0x3F 以实现 16 个字符和 2 行显示

LiquidCrystal_I2C lcd(0x27, 16, 2); //地址初始

void setup() {
  Serial.begin(9600);
  pinMode(SW_PIN, INPUT);
  Serial.println("bianmaqi");
   myservo.attach(servoPin);  // 将伺服连接到引脚
   myservo.write(servoAngel);//将舵机移动到初始位置

   
//LCD屏幕显示的文字角度信息 
  lcd.begin();
  lcd.backlight();     
  lcd.print("c");
  lcd.setCursor (0,1); 
  lcd.print("Servo Test");   
  delay(2000);   
   lcd.clear();
  lcd.print("Find Order"); //LCD屏幕显示的文字角度信息 
  lcd.setCursor (0,1); 
  lcd.print("Angel: ");  //LCD屏幕显示的文字角度信息 
}

long oldPosition  = -999;

void loop() {
  long newPosition = myEnc.read();
  if (newPosition != oldPosition) {

    if(newPosition >  oldPosition)
    {
    int newStep = abs(newPosition - oldPosition);
      Serial.print("Angle ");
      Serial.println(servoAngel);      
      servoAngel -= stepValue;
      if(servoAngel <0)
          servoAngel =0;      
      myservo.write(servoAngel); //将伺服移动到
      lcdAngel(servoAngel);//在液晶屏上打印
    }

    if(newPosition <  oldPosition )
    {
    int newStep = abs(newPosition - oldPosition);
      Serial.print("Angle ");
      Serial.println(servoAngel);        
      servoAngel += stepValue;
      if(servoAngel >180)
          servoAngel =180;
      myservo.write(servoAngel); //
      lcdAngel(servoAngel);//
    }
   oldPosition = newPosition;//记住新位置
  }

  if( digitalRead(SW_PIN) == LOW)
  {
    Serial.print("Home: ");
    Serial.println(homePosition);
    servoAngel =homePosition;
      myservo.write(servoAngel); //
      lcdAngel(servoAngel);//
  
  }

  delay(200);
}

void lcdAngel(int angel)
{
  
  int startChar =7;
  for(int i=startChar; i<16; i++)
  {
   lcd.setCursor (i,1);    
    lcd.print(" ");   
  }
 
   lcd.setCursor (startChar,1); //
   lcd.print(angel); 
   lcd.print((char)223);
}

